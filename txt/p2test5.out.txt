SUCCESS
[
  (ASSIGN
    (TREF
      ID:x
      INT:3
    )
    [
      (INDEX
        ID:f
        ID:x
      )
      ID:fd
      (+
        (TREF
          ID:fd
          INT:3
        )
        (INDEX
          ID:fd
          ID:s
        )
      )
      (CALL
        ID:f
        ID:x
      )
    ]
  )
  (ASSIGN
    ID:z
    [
      INT:5
      ID:k
    ]
  )
  (ASSIGN
    ID:tr
    ID:z
  )
  PRINT:
    ID:tr
  (WHILE
    (<
      ID:x
      INT:4
    )
    [
      PRINT:
        ID:x
      (ASSIGN
        ID:x
        (+
          ID:x
          INT:1
        )
      )
    ]
  )
  (IF
    (==
      ID:x
      INT:4
    )
    [
      RETURN:
        ID:x
    ]
    [
      (ELSIF
        (==
          ID:x
          INT:5
        )
        [
          RETURN:
            (+
              ID:x
              INT:4
            )
        ]
      )
      (ELSIF
        (>=
          ID:x
          INT:100
        )
        [
          RETURN:
            (-
              ID:x
              INT:100
            )
        ]
      )
      (ELSIF
        (==
          INT:1
          [
            INT:1
            INT:1
          ]
        )
        [
          RETURN:
            ID:tr
        ]
      )
      (ELSIF
        (==
          INT:10
          [
            INT:10
            INT:10
            INT:10
          ]
        )
        None
      )
    ]
    ELSE:
      [
        RETURN:
          ID:tr
      ]
  )
  (ARRAY
    ID:x
    (RANGE
      (+
        INT:1
        INT:21
      )
      INT:43
    )
    INT:4
  )
  (ARRAY
    ID:x
    (RANGE
      (+
        INT:1
        INT:21
      )
      INT:43
    )
    None
  )
  (GLOBAL
    ID:x
    (INDEX
      ID:x
      (+
        INT:32
        INT:2
      )
    )
  )
  (FOREACH
    ID:i
    (RANGE
      (+
        (TREF
          ID:x
          INT:1
        )
        INT:1
      )
      (-
        (TREF
          ID:x
          INT:2
        )
        INT:1
      )
    )
    [
      PRINT:
        ID:i
      PRINT:
        (/
          ID:n
          ID:i
        )
    ]
  )
  (DEFUN
    ID:fib
    [
      ID:n
      ID:m
      ID:o
    ]
    [
      (LOCAL
        ID:x
        INT:0
      )
      (WHILE
        (<
          ID:n
          INT:100
        )
        [
          (ASSIGN
            ID:x
            (+
              ID:x
              (CALL
                ID:sqrt
                (-
                  (-
                    ID:n
                    ID:m
                  )
                  ID:o
                )
              )
            )
          )
        ]
      )
      RETURN:
        ID:x
    ]
  )
  (DEFUN
    ID:sin
    ID:x
    [
      RETURN:
        (CALL
          ID:cos
          (-
            ID:x
            (/
              ID:pi
              INT:2
            )
          )
        )
    ]
  )
  (DEFUN
    ID:sin
    ID:x
    [
      RETURN:
        ID:x
    ]
  )
  (TUPLE
    ID:tup
    [
      (INDEX
        ID:x
        (/
          (INDEX
            ID:x
            INT:3
          )
          INT:2
        )
      )
      (+
        (+
          INT:1
          INT:1
        )
        INT:1
      )
      INT:2
    ]
  )
  (IF
    (>
      [
        ID:x
        ID:x
      ]
      [
        ID:y
        ID:y
      ]
    )
    [
      RETURN:
        [
          ID:x
          ID:x
        ]
    ]
    None
    None
  )
  (DEFUN
    ID:main
    [
      ID:argc
      ID:argv
    ]
    [
      (FOREACH
        ID:i
        (RANGE
          INT:1
          ID:argc
        )
        [
          PRINT:
            (INDEX
              ID:argv
              ID:i
            )
        ]
      )
      RETURN:
        INT:0
    ]
  )
  (LOCAL
    ID:x
    INT:7
  )
  PRINT:
    (CALL
      ID:sin
      (CALL
        ID:cos
        ID:x
      )
    )
  PRINT:
    (CALL
      ID:sin
      (CALL
        ID:cos
        ID:x
      )
    )
  PRINT:
    (-
      (CALL
        ID:sin
        (CALL
          ID:cos
          ID:x
        )
      )
      (/
        ID:pi
        INT:2
      )
    )
  PRINT:
    (CALL
      ID:sin
      (CALL
        ID:cos
        (-
          ID:x
          (/
            ID:pi
            INT:2
          )
        )
      )
    )
  (ASSIGN
    ID:a
    (-
      ID:b
      (*
        INT:3
        INT:4
      )
    )
  )
  (ASSIGN
    ID:a
    (-
      (+
        (-
          (/
            (+
              ID:b
              (*
                INT:4
                INT:5
              )
            )
            INT:6
          )
          ID:a
        )
        ID:b
      )
      INT:3
    )
  )
]
