x.3 = f[x],fd,((fd.3)) + fd[s], f x
z = (5,k)
tr = z
print tr

while x < 4
    print x
    x = x + 1
end

***t

if x == 4
    return x
elsif x == 5
    return x+4
elsif x >= 100
    return x-100
elsif 1 == 1,1
    return tr
elsif 10 == 10,10,10
else
    return tr
end

array x[1+21..43] i=43-i
array x[1+21..43]

global x = x[32+(2)]

for i in x.1+1..x.2-1
    print i
    print (n/i)
end

defun fib(n,m,o)
    local x = 0
    while n < 100
        x = x + sqrt(n-m-o)
    end
    return x
end

defun sin(x)
    return cos(x-pi/2)
end

*** for engineers that troll physicists
defun sin(x)
    return x
end

global tup = x[x[3]/2],1+1+1,2

if x,x > y,y
    return x,x
end

defun main(argc, argv)
    for i in 1..argc
        print argv[i]
    end
    return 0
end

local x = 7

print(sin(cos(x)))
print sin cos x
print sin cos x-pi/2
print sin cos(x-pi/2)

a = ((((b)-3*4)))
a = ((((b)+(4*5))/6-a+b)-3)
